[{"/home/theodore/Desktop/React Project/memoru-project/client/src/index.js":"1","/home/theodore/Desktop/React Project/memoru-project/client/src/App.js":"2","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/Form.js":"3","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Posts.js":"4","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/Post.js":"5","/home/theodore/Desktop/React Project/memoru-project/client/src/styles.js":"6","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/styles.js":"7","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/styles.js":"8","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/styles.js":"9","/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/index.js":"10","/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/posts.js":"11","/home/theodore/Desktop/React Project/memoru-project/client/src/actions/posts.js":"12","/home/theodore/Desktop/React Project/memoru-project/client/src/api/index.js":"13","/home/theodore/Desktop/React Project/memoru-project/client/src/constants/actionTypes.js":"14","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/Navbar.js":"15","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/styles.js":"16","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Home/Home.js":"17","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Auth.js":"18","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/styles.js":"19","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Input.js":"20"},{"size":451,"mtime":1607881519419,"results":"21","hashOfConfig":"22"},{"size":581,"mtime":1613118116593,"results":"23","hashOfConfig":"22"},{"size":3217,"mtime":1607965448001,"results":"24","hashOfConfig":"22"},{"size":705,"mtime":1607957145800,"results":"25","hashOfConfig":"22"},{"size":2292,"mtime":1607965639354,"results":"26","hashOfConfig":"22"},{"size":462,"mtime":1607966002537,"results":"27","hashOfConfig":"22"},{"size":492,"mtime":1607864690953,"results":"28","hashOfConfig":"22"},{"size":264,"mtime":1607881037270,"results":"29","hashOfConfig":"22"},{"size":961,"mtime":1607881124658,"results":"30","hashOfConfig":"22"},{"size":114,"mtime":1607866316261,"results":"31","hashOfConfig":"22"},{"size":648,"mtime":1608044300589,"results":"32","hashOfConfig":"22"},{"size":1153,"mtime":1608043869145,"results":"33","hashOfConfig":"22"},{"size":403,"mtime":1607964874718,"results":"34","hashOfConfig":"22"},{"size":130,"mtime":1608043872082,"results":"35","hashOfConfig":"22"},{"size":1642,"mtime":1613118001679,"results":"36","hashOfConfig":"22"},{"size":907,"mtime":1613116910004,"results":"37","hashOfConfig":"22"},{"size":926,"mtime":1613117901022,"results":"38","hashOfConfig":"22"},{"size":2854,"mtime":1613121033210,"results":"39","hashOfConfig":"22"},{"size":636,"mtime":1613118393772,"results":"40","hashOfConfig":"22"},{"size":1003,"mtime":1613119251611,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"16tpwj1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/theodore/Desktop/React Project/memoru-project/client/src/index.js",[],["86","87"],"/home/theodore/Desktop/React Project/memoru-project/client/src/App.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/Form.js",["88"],"import React, { useState, useEffect } from 'react'\nimport {\n  TextField,\n  Button,\n  Typograph,\n  Paper,\n  Typography,\n} from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport useStyles from './styles'\nimport { createPost, updatePost } from '../../actions/posts'\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    selectedFile: '',\n    tags: '',\n  })\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((p) => p._id === currentId) : null\n  )\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (post) setPostData(post)\n  }, [post])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData))\n    } else {\n      dispatch(createPost(postData))\n    }\n    clear()\n  }\n  const clear = () => {\n    setCurrentId(null)\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      selectedFile: '',\n      tags: '',\n    })\n  }\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete='off'\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant='h6'>\n          {currentId ? 'Editing' : 'Creating'} a Memory\n        </Typography>\n        <TextField\n          name='creator'\n          variant='outlined'\n          label='Creator'\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <TextField\n          name='title'\n          variant='outlined'\n          label='Title'\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name='message'\n          variant='outlined'\n          label='Message'\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name='tags'\n          variant='outlined'\n          label='Tags'\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(',') })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type='file'\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant='contained'\n          color='primary'\n          size='large'\n          type='submit'\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  )\n}\n\nexport default Form\n","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Posts.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/Post.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/styles.js",[],["89","90"],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/index.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/posts.js",["91"],"import { FETCH_ALL, CREATE, DELETE, UPDATE } from '../constants/actionTypes'\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload\n    case CREATE:\n      return [...posts, action.payload]\n    case UPDATE:\n      // return an array where only the post that we update is returned\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      )\n    case DELETE:\n      // return all the posts except the one that we delete (it comes from the id !)\n      return posts.filter((post) => post._id !== action.payload)\n    default:\n      return posts\n  }\n}\n","/home/theodore/Desktop/React Project/memoru-project/client/src/actions/posts.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/api/index.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/constants/actionTypes.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/Navbar.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Home/Home.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Auth.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Input.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":3,"nodeType":"98","messageId":"99","endLine":5,"endColumn":12},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":1,"nodeType":"104","endLine":20,"endColumn":2},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Typograph' is defined but never used.","Identifier","unusedVar",["105"],["106"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]