[{"/home/theodore/Desktop/React Project/memoru-project/client/src/index.js":"1","/home/theodore/Desktop/React Project/memoru-project/client/src/App.js":"2","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/Form.js":"3","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Posts.js":"4","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/Post.js":"5","/home/theodore/Desktop/React Project/memoru-project/client/src/styles.js":"6","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/styles.js":"7","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/styles.js":"8","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/styles.js":"9","/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/index.js":"10","/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/posts.js":"11","/home/theodore/Desktop/React Project/memoru-project/client/src/actions/posts.js":"12","/home/theodore/Desktop/React Project/memoru-project/client/src/api/index.js":"13","/home/theodore/Desktop/React Project/memoru-project/client/src/constants/actionTypes.js":"14","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/Navbar.js":"15","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/styles.js":"16","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Home/Home.js":"17","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Auth.js":"18","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/styles.js":"19","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Input.js":"20","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/icon.js":"21","/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/auth.js":"22","/home/theodore/Desktop/React Project/memoru-project/client/src/actions/auth.js":"23"},{"size":451,"mtime":1607881519419,"results":"24","hashOfConfig":"25"},{"size":581,"mtime":1613118116593,"results":"26","hashOfConfig":"25"},{"size":3217,"mtime":1607965448001,"results":"27","hashOfConfig":"25"},{"size":705,"mtime":1607957145800,"results":"28","hashOfConfig":"25"},{"size":2292,"mtime":1607965639354,"results":"29","hashOfConfig":"25"},{"size":462,"mtime":1607966002537,"results":"30","hashOfConfig":"25"},{"size":492,"mtime":1607864690953,"results":"31","hashOfConfig":"25"},{"size":264,"mtime":1607881037270,"results":"32","hashOfConfig":"25"},{"size":961,"mtime":1607881124658,"results":"33","hashOfConfig":"25"},{"size":148,"mtime":1613209796459,"results":"34","hashOfConfig":"25"},{"size":648,"mtime":1608044300589,"results":"35","hashOfConfig":"25"},{"size":1153,"mtime":1608043869145,"results":"36","hashOfConfig":"25"},{"size":403,"mtime":1607964874718,"results":"37","hashOfConfig":"25"},{"size":189,"mtime":1613209699122,"results":"38","hashOfConfig":"25"},{"size":2152,"mtime":1613210599113,"results":"39","hashOfConfig":"25"},{"size":907,"mtime":1613116910004,"results":"40","hashOfConfig":"25"},{"size":926,"mtime":1613117901022,"results":"41","hashOfConfig":"25"},{"size":4627,"mtime":1613211394071,"results":"42","hashOfConfig":"25"},{"size":636,"mtime":1613118393772,"results":"43","hashOfConfig":"25"},{"size":1065,"mtime":1613209218622,"results":"44","hashOfConfig":"25"},{"size":499,"mtime":1613128955091,"results":"45","hashOfConfig":"25"},{"size":438,"mtime":1613210504508,"results":"46","hashOfConfig":"25"},{"size":355,"mtime":1613211593902,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"16tpwj1",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/theodore/Desktop/React Project/memoru-project/client/src/index.js",[],["98","99"],"/home/theodore/Desktop/React Project/memoru-project/client/src/App.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/Form.js",["100"],"import React, { useState, useEffect } from 'react'\nimport {\n  TextField,\n  Button,\n  Typograph,\n  Paper,\n  Typography,\n} from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport useStyles from './styles'\nimport { createPost, updatePost } from '../../actions/posts'\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    selectedFile: '',\n    tags: '',\n  })\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((p) => p._id === currentId) : null\n  )\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (post) setPostData(post)\n  }, [post])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData))\n    } else {\n      dispatch(createPost(postData))\n    }\n    clear()\n  }\n  const clear = () => {\n    setCurrentId(null)\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      selectedFile: '',\n      tags: '',\n    })\n  }\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete='off'\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant='h6'>\n          {currentId ? 'Editing' : 'Creating'} a Memory\n        </Typography>\n        <TextField\n          name='creator'\n          variant='outlined'\n          label='Creator'\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <TextField\n          name='title'\n          variant='outlined'\n          label='Title'\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name='message'\n          variant='outlined'\n          label='Message'\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name='tags'\n          variant='outlined'\n          label='Tags'\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(',') })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type='file'\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant='contained'\n          color='primary'\n          size='large'\n          type='submit'\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  )\n}\n\nexport default Form\n","/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Posts.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/Post.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/styles.js",[],["101","102"],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Form/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Posts/Post/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/index.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/posts.js",["103"],"import { FETCH_ALL, CREATE, DELETE, UPDATE } from '../constants/actionTypes'\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload\n    case CREATE:\n      return [...posts, action.payload]\n    case UPDATE:\n      // return an array where only the post that we update is returned\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      )\n    case DELETE:\n      // return all the posts except the one that we delete (it comes from the id !)\n      return posts.filter((post) => post._id !== action.payload)\n    default:\n      return posts\n  }\n}\n","/home/theodore/Desktop/React Project/memoru-project/client/src/actions/posts.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/api/index.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/constants/actionTypes.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/Navbar.js",["104","105"],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Navbar/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Home/Home.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Auth.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/styles.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/Input.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/components/Auth/icon.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/reducers/auth.js",[],"/home/theodore/Desktop/React Project/memoru-project/client/src/actions/auth.js",["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":5,"column":3,"nodeType":"114","messageId":"115","endLine":5,"endColumn":12},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":1,"nodeType":"120","endLine":20,"endColumn":2},{"ruleId":"112","severity":1,"message":"121","line":16,"column":11,"nodeType":"114","messageId":"115","endLine":16,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":19,"column":6,"nodeType":"124","endLine":19,"endColumn":16,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":14},{"ruleId":"112","severity":1,"message":"127","line":2,"column":13,"nodeType":"114","messageId":"115","endLine":2,"endColumn":16},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Typograph' is defined but never used.","Identifier","unusedVar",["128"],["129"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'AUTH' is defined but never used.","'api' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [location, user?.token]",{"range":"133","text":"134"},[661,671],"[location, user?.token]"]